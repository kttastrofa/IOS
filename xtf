#!/bin/bash

POSIXLY_CORRECT=yes

## filtr-prikaz-meno-log

# skontroluj, ci jesto veci dvesto
# ak jesto, cas prikazom dat priestor

# filtruj info (awk), zoradzuj (sort)
#######################################
# -z $1 == "list"
# -n $1 == "list" || "help" || "status" || "profit" || "status-currency"
# -n $1 || $2 == "[name]"
# -n $2 || $3 == "[log]"
# || solved by shift

# return take from xtf (orgsrc)
#######################################
# WARNING: desetine, none else :/


# [-h|--help] [FILTR] [PŘÍKAZ] UŽIVATEL LOG [LOG2 [...]]


if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
      echo "

                Hello!

                Here's some help:
                [-h|--help] [FILTR] [PŘÍKAZ] UŽIVATEL LOG [LOG2 [...]]

                '-h' or '--help'      : is what you can see right now :)

                for FILTR you can use:
                '-a [DATETIME]'       : returns every log after used [DATETIME], use format YYYY-MM-DD HH:MM:SS
                '-b [DATETIME]'       : returns every log before used [DATETIME]
                '-c [CURRENCY]'       : returns every log with used [CURRENCY], for codes of currencies call 'list-currency'

                for PŘÍKAZ you can use:
                'list'                : returns list of every log of yours
                'list-currency'       : returns list of every currency in alphabetical order
                'status'              : returns list of every -- status of every currency you maintain
                'profit'              : returns list of every status of your currencies with the profit you made

                for UŽIVATEL use your name you had signed with
                for LOG use log, which has to be a file of '.log' or '.gz' in CSV format

                WARNING: last two (UŽIVATEL & LOG) are mandatory for every action

                Hope it helped :)

            "
      shift 1
      exit 0
    fi

    if [ "$1" = "-a" ] || [ "$1" = "-b" ] || [ "$1" = "-c" ]; then
        FLT="$1"
        shift 1
        VALUE="$1"
        shift 1
        VALUE+="$1"
        shift 1
    fi

    #todo if more FLT, tak bere len 1.

    if [ "$1" = "list" ] || [ "$1" = "list-currency" ] || [ "$1" = "profit" ] || [ "$1" = "status" ]; then
        CMD="$1"
        shift 1
    else
        CMD="list"
    fi

    if [ -n "$1" ]; then
        NAME="$1"
        shift 1
    fi

    if [ -f "$1" ]; then #bere jen static way
        LOG[0]="$1"
        shift 1
    fi

    if [ -f "$1" ]; then #bere jen static way
        while [ -n "$1" ]; do
            LOG+=("$1")
            shift 1
        done
    fi


ERROR_fun ()
{

    if [ -z "$1" ]; then
        echo "ERROR: Please call for '--help'."
        exit 1
    elif [ -z "$NAME" ]; then
        echo "ERROR: No NAME used, please write your name on UŽIVATEL placeholder or call for '--help'."
        exit 1
    elif [ -z "${LOG[0]}" ]; then
        echo "ERROR: No LOG used, please put your log on LOG placeholder or call for '--help'."
        exit 1
    fi

    #todo Check if log files exist && .gz openin'
    for LOG in "${LOG[@]}"; do
        if [[ ! -f "$LOG" ]]; then
            echo "File $LOG does not exist"
            exit 1
        elif [[ ! -r "$LOG" ]]; then
            echo "File $LOG is not readable"
            exit 1
        elif [[ -d "$LOG" ]]; then
            echo "File $LOG is a directory"
            exit 1
        fi
    done
}


FLT_fun ()
{
    if [ "$FLT" = "-a" ]; then #after time
        awk ' -F ";" /$NAME/ && sort_time {print} | sort '
        #todo sort time for "$DATE >= $2 && $TIME >= $3"
    elif [ "$FLT" = "-b" ]; then
        awk ' -F ";" /$NAME/ && sort_time {print} | sort '
    elif [ "$FLT" = "-c" ]; then
        awk ' -F ";" /$NAME/ && /$VALUE/ {print} | sort '
    fi
}


CMD_fun ()
{
    if [ "$CMD" = "list" ]; then
        awk  -F ";" -v name="$NAME" '$1 == name {print} ' "$LOG"

    elif [ "$CDM" = "list-currency" ]; then
        awk  -F ";" -v name="$NAME" '$1 == name {print $3}' "$LOG" | uniq | sort

    elif [ "$CMD" = "status" ]; then
        awk -F ";" -v name="$NAME" '$1 == name {print $3" \: "$4}' "$LOG" | sort -t ';' -k3

    elif [ "$CMD" = "profit" ]; then
        awk -F ";" -v name="$NAME" '$1 == name {print $3" \: "$4*1.2}' "$LOG" | sort -t ';' -k3
        awk -F ";" -v name="$NAME" '$1 == name {if ($4 > 0) print $3" \: "$4*1.2; else print $3" \: "$4}' "$LOG" | sort -t ';' -k3

        #todo ?? where *
    fi
}


########################################################################################################################
########################################################################################################################
#                                                         MAIN                                                         #
########################################################################################################################
########################################################################################################################



ERROR_fun  "$NAME","${LOG[*]}" ,
CMD_fun "$CMD","$NAME","${LOG[*]}" ,
FLT_fun "$VALUE","$NAME","${LOG[*]}" ,
